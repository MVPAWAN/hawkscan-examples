# stackhawk configuration for Azure Active Directory Client Credentials grant type with a certificate
# https://learn.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow#second-case-access-token-request-with-a-certificate

app:
  applicationId: ${HAWK_APP_ID}
  env: Development
  host: http://localhost:3000
  openApiConf:
    filePath: openapi.yml
  autoPolicy: true
  autoInputVectors: true

  authentication:
    loggedInIndicator: ".*" # This will always match, so we will never fall through to loggedOutIndicator
    loggedOutIndicator: "^$" # This will never match, so we will never reauthenticate

    # AuthN Settings
    script:
      name: azure-ad-client-credential-certificate.kts
      parameters:
        tenant: ${AAD_TENANT} # The directory tenant that you want to log the user into. The tenant can be in GUID or friendly name format
        scope: ${AAD_SCOPE} # The resource identifier (application ID URI) of the resource you want, affixed with the .default suffix, e.g. https://graph.microsoft.com/.default
        cert_thumbprint : ${AAD_CERT_THUMBPRINT} # Base64url-encoded SHA-1 thumbprint of the X.509 certificate's DER encoding. For example, given an X.509 certificate hash of 84E05C1D98BCE3A5421D225B140B36E86A3D5534 (Hex), the x5t claim would be hOBcHZi846VCHSJbFAs26Go9VTQ (Base64url).
        pem_key: ${PEM_KEY}
      credentials:
        clientId: ${AAD_CLIENT_ID} # The Application (client) ID that the Azure portal App registrations page assigned to your app

    # AuthZ Settings
    tokenExtraction:
      type: TOKEN_PATH
      value: access_token
    tokenAuthorization:
      type: HEADER
      value: Authorization
      tokenType: Bearer
    testPath:
      path: /secured
      success: '.*200.*'

hawkAddOn:
  scripts:
    - name: azure-ad-client-credential-certificate.kts
      path: hawkscripts
      type: authentication
      language: KOTLIN