app:
  applicationId: ${YOUR_APP_ID}
  env: Okta
  host: ${APP_HOST:http://localhost:9000}
  openApiConf:
    path: "/openapi.json"
  autoPolicy: true
  autoInputVectors: true
  authentication:
     # A regex to match against http responses from pages in the web application to determine if the scanned pages user 
    # session is still logged in to the app, provided as a string (ex. \`"\\Qsigned in as\\E"\`).
    loggedInIndicator: "HTTP.*2[0-9][0-9]\\s*O[kK](\\s*)|HTTP.*3[0-9][0-9].*"
    # A regex to match against http responses from pages in the web application to determine if the scanned pages user 
    # session is logged out of the app, provided as a string
    loggedOutIndicator: "HTTP.*4[0-9][0-9](\\s*)Unauthorized.*" 
    script:
      name: okta-client-credentials.js
      parameters:
        issuer: ${baseUrl}/v1/token
        grant_type: client_credentials
        scope: ${SCOPE} 
      credentials:
        client_id: ${YOUR_CLIENT_ID}
        client_secret: ${YOUR_CLIENT_SECRET}
    # authZ
    sessionScript:
      name: access-token-session.js
    testPath:
      path: /private
      success: '.*200.*'
hawkAddOn:
  scripts:
    - name: okta-client-credentials.js
      language: JAVASCRIPT
      type: authentication
      path: scripts
    - name: access-token-session.js
      language: JAVASCRIPT
      type: session
      path: scripts
  replacer:
    rules:
      - matchString: "User-Agent"
        replacement: "StackHawk"
        replaceOnly: false
